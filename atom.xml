<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://sunjx97.github.io/atom.xml" rel="self"/>
  
  <link href="https://sunjx97.github.io/"/>
  <updated>2021-12-19T04:03:21.246Z</updated>
  <id>https://sunjx97.github.io/</id>
  
  <author>
    <name>sunjx97</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Transmission 2.94升级3.00 跳过启动校验</title>
    <link href="https://sunjx97.github.io/2021/12/18/Transmission-2-94%E5%8D%87%E7%BA%A73-00-%E8%B7%B3%E8%BF%87%E5%90%AF%E5%8A%A8%E6%A0%A1%E9%AA%8C/"/>
    <id>https://sunjx97.github.io/2021/12/18/Transmission-2-94%E5%8D%87%E7%BA%A73-00-%E8%B7%B3%E8%BF%87%E5%90%AF%E5%8A%A8%E6%A0%A1%E9%AA%8C/</id>
    <published>2021-12-18T12:13:22.000Z</published>
    <updated>2021-12-19T04:03:21.246Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>将transmission升级到了3.00，发现每次启动都会对升级前的旧种子重新校验，然后就是数十个小时的校验过程，实在让人头大。经过多次尝试，终于找到可以跳过启动校验（只校验一次）的方法了，现记录如下。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>transmission在3.00使用<b>40位hash</b>记录种子文件的信息（之前是16位），在torrents和resume文件夹中新生成的文件都是用40位hash值命名的。要解决每次启动都重复校验的问题，需要将旧种子的信息更新。主要有以下几步：</p><ol><li>等待transmission第一次校验完生成<b>新的40位hash命名的resume文件</b>并将旧种子的的resume文件删除</li><li>将对应的旧种子的torrent文件更名为<b>相同的40位hash</b>。</li></ol><h3 id="1-等待初次校验完成"><a href="#1-等待初次校验完成" class="headerlink" title="1. 等待初次校验完成"></a>1. 等待初次校验完成</h3><!-- ![](/images/resume新旧文件对比.png) --><img src="/images/resume新旧文件对比.png" width="70%" />等待校验完成并删除旧resume文件（很好分辨，2.94版本是【种子名+前16位hash】的命名方式，而3.0版本生成的新resume文件都是【40位hash】命名方式）<h3 id="2-对旧torrent文件重命名"><a href="#2-对旧torrent文件重命名" class="headerlink" title="2. 对旧torrent文件重命名"></a>2. 对旧torrent文件重命名</h3><p>停止docker中的transmission服务，将旧torrent文件重命名为新40位hash形式。<br>因为旧torrent文件名称包含前16位hash，所以可以直接将16位hash字符串与resume文件夹内所有文件进行匹配，如果匹配上前16位，则修正命名。</p><p>写了段<a href="https://github.com/sunjx97/torrent-file-rename">代码</a>解决命名问题：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">torrents_src = <span class="built_in">input</span>(<span class="string">&#x27;请输入torrents文件夹绝对路径：&#x27;</span>)</span><br><span class="line">resume_src = <span class="built_in">input</span>(<span class="string">&#x27;请输入resume文件夹绝对路径：&#x27;</span>)</span><br><span class="line"></span><br><span class="line">torrent_list = os.listdir(torrents_src)</span><br><span class="line">resume_list = os.listdir(resume_src)</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> torrent <span class="keyword">in</span> torrent_list:</span><br><span class="line">    <span class="comment"># 从16位hash值开始，到后缀名结束</span></span><br><span class="line">    <span class="comment"># 如果是新版文件40位hash，则会截取后16位，在下面match起始位置匹配匹配失败</span></span><br><span class="line">    pattern = torrent[-<span class="number">24</span>:-<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> resume <span class="keyword">in</span> resume_list:</span><br><span class="line">        <span class="keyword">if</span> re.match(pattern, resume[:-<span class="number">7</span>], re.I):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Ok, find the files!&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;torrent:&#x27;</span>, torrent)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;resume:&#x27;</span>, resume)</span><br><span class="line">            os.rename(torrents_src+<span class="string">&#x27;\\&#x27;</span>+torrent, torrents_src+<span class="string">&#x27;\\&#x27;</span>+resume[:-<span class="number">7</span>]+<span class="string">&#x27;.torrent&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;torrent&#125;</span> 已更名为 <span class="subst">&#123;resume[:-<span class="number">7</span>]&#125;</span>.torrent&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;==========================&#x27;</span>)</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;已成功命名<span class="subst">&#123;count&#125;</span>个种子文件&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果如下，一切顺利。<br><img src="/images/torrent%E6%9B%B4%E5%90%8D%E6%88%90%E5%8A%9F.png"></p><p>启动transmission，可以看到已经没有在校验了。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>在操作前<b>备份</b>好torrents和resume文件夹</li><li>初次校验完成后建议<b>停止</b>transmission服务后再操作。</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/ylxb2016/PT-help/blob/master/PT%20Tutorial/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91Transmission%20%E6%89%8B%E5%8A%A8%E8%B7%B3%E8%BF%87%E6%A0%A1%E9%AA%8C%20%E6%95%99%E7%A8%8B.md">【原创】Transmission 手动跳过校验 教程.md</a><br><a href="https://forum.transmissionbt.com/viewtopic.php?f=2&t=20838&p=80079&hilit=resume&sid=6a23eb2473eab4b32c5df60332c16ae1">Move a half downloaded file from Android to Windows/Linux</a><br><a href="https://forum.transmissionbt.com/viewtopic.php?f=2&t=20694&p=79636&hilit=resume&sid=6a23eb2473eab4b32c5df60332c16ae1#p79636">Reinstall Transmission and moving data to avoid torrent recheck</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;将transmission升级到了3.00，发现每次启动都会对升级前的旧种子重新校验，然后就是数十个小时的校验过程，实在让人头大。经过多次尝</summary>
      
    
    
    
    <category term="pt" scheme="https://sunjx97.github.io/categories/pt/"/>
    
    
    <category term="transmission" scheme="https://sunjx97.github.io/tags/transmission/"/>
    
    <category term="pt" scheme="https://sunjx97.github.io/tags/pt/"/>
    
  </entry>
  
</feed>
